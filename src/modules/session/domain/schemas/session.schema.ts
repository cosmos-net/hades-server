import ArchivedAt from '@common/domain/value-object/vos/archived-at.vo';
import CreatedAt from '@common/domain/value-object/vos/created-at.vo';
import Id from '@common/domain/value-object/vos/id.vo';
import UpdatedAt from '@common/domain/value-object/vos/updated-at.vo';
import UUID from '@common/domain/value-object/vos/uuid.vo';
import ExpiresInAt from '@session/domain/value-objects/expires-in.vo';
import SessionFailedAttempts from '@session/domain/value-objects/failed-attempts.vo';
import SessionIpAddress from '@session/domain/value-objects/ip-address.vo';
import SessionLocation from '@session/domain/value-objects/location.vo';
import LoggedInAt from '@session/domain/value-objects/logged-in-at.vo';
import LoggedOutAt from '@session/domain/value-objects/logged-out-at.vo';
import SessionOrigin from '@session/domain/value-objects/origin.vo';
import SessionRefreshToken from '@session/domain/value-objects/refresh-token.vo';
import SessionClosedType from '@session/domain/value-objects/session-closed-type.vo';
import SessionDuration from '@session/domain/value-objects/session-duration.vo';
import SessionId from '@session/domain/value-objects/session-id.vo';
import { SessionStatus } from '@session/domain/value-objects/session-status.vo';
import SessionType from '@session/domain/value-objects/session-type.vo';
import SessionToken from '@session/domain/value-objects/token.vo';
import SessionUserAgent from '@session/domain/value-objects/user-agent.vo';
import { AccountModel } from '@user/domain/models/account/account.model';

export interface ISessionSchema {
  id: Id;
  uuid: UUID;
  sessionId: SessionId;
  sessionType: SessionType;
  sessionDuration: SessionDuration;
  sessionClosedType: SessionClosedType;
  token: SessionToken;
  expiresInAt: ExpiresInAt;
  loggedInAt: LoggedInAt;
  loggedOutAt: LoggedOutAt;
  ipAddress: SessionIpAddress;
  refreshToken: SessionRefreshToken;
  userAgent: SessionUserAgent;
  failedAttempts: SessionFailedAttempts;
  origin: SessionOrigin;
  location: SessionLocation;
  createdAt: CreatedAt;
  updatedAt: UpdatedAt;
  archivedAt: ArchivedAt;
  status: SessionStatus;
  account?: AccountModel;
}
