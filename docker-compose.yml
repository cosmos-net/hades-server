version: '3.8'

services:
  # Servicio de PostgreSQL
  db:
    image: postgres:latest
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASS}
      POSTGRES_DB: ${DB_POSTGRES_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de NATS
  nats-server:
    image: nats:latest
    container_name: nats-broker
    ports:
      - "4223:4222"
    environment:
      - NATS_HOST=${NATS_HOST}
      - NATS_PROTOCOL=${NATS_PROTOCOL}
    networks:
      - app-network

  # Servicio de tu microservicio NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hades-server
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    depends_on:
      - db
      - nats-server
    networks:
      - app-network
    environment:
      # Variables de entorno para PostgreSQL
      DB_POSTGRES_HOST: db
      DB_POSTGRES_PORT: ${DB_POSTGRES_PORT}
      DB_POSTGRES_TYPE: ${DB_POSTGRES_TYPE}
      DB_POSTGRES_USER: ${DB_POSTGRES_USER}
      DB_POSTGRES_PASS: ${DB_POSTGRES_PASS}
      DB_POSTGRES_NAME: ${DB_POSTGRES_NAME}
      DB_POSTGRES_SSL: ${DB_POSTGRES_SSL}
      DB_POSTGRES_SYNC: ${DB_POSTGRES_SYNC}
      DB_POSTGRES_AUTO_LOAD: ${DB_POSTGRES_AUTO_LOAD}
      DB_POSTGRES_RUN_MIGRATIONS: ${DB_POSTGRES_RUN_MIGRATIONS}
      DB_POSTGRES_LOGGING: ${DB_POSTGRES_LOGGING}
      DB_POSTGRES_MIGRATIONS_TABLE_NAME: ${DB_POSTGRES_MIGRATIONS_TABLE_NAME}

      # Variables de entorno para NATS
      NATS_URL: nats://nats-server:4222

      # Variables de entorno para el servidor
      PORT: ${PORT:-3000}

    command: >
      bash -c "
        /usr/local/bin/wait-for-it.sh db:${DB_POSTGRES_PORT} -t 60 --
        /usr/local/bin/wait-for-it.sh nats-server:4222 --
        pnpm run typeorm:migration:run &&
        pnpm run start:prod
      "

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge